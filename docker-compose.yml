version: "3"
services:
  
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    # expose:
    #   - 5432
    # ports:
    #   - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_BASE}
    # command: -p 5432
    container_name: ${POSTGRES_HOST}

  api:
    image: ilyabalter/my_dimension:api
    build: ./web_server
    command: sh -c "python manage.py migrate && gunicorn web_server.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 4"
    volumes:
      - ./web_server/:/usr/src/api/
      # - static_volume:/usr/src/api/static
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
    container_name: api

  frontend:
    image: ilyabalter/my_dimension:frontend
    build: ./frontend
    command: serve -s build
    # command: npm start
    volumes:
      - ./frontend/:/usr/src/frontend/
    ports:
      - 3000:3000
    container_name: frontend
   
  nginx: 
  # Build context
    build: ./nginx
     
     # Mapping machine and container ports
    ports:
      - ${CORS_WHITELISTPORT}:80
       
     # Storage volumes
    # volumes:
    #   - static_volume:/usr/src/api/static
      #  - media_volume:/home/app/web/mediafiles
    depends_on:
      - frontend
      - api
    container_name: nginx

volumes:
  postgres_data:
  # static_volume: